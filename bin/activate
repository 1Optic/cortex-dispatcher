# vim: filetype=sh

function absolute_dir {
    local old_pwd="$(pwd)"
    cd "$1"
    pwd
    cd "$old_pwd"
}

SHELL_NAME="${SHELL##*/}"

if [ "$SHELL_NAME" = "bash" ]; then
    SCRIPT_PATH="${BASH_SOURCE[0]}"
elif [ "$SHELL_NAME" = "zsh" ]; then
    SCRIPT_PATH="${(%):-%x}"
fi

RELATIVE_SCRIPT_DIR=${SCRIPT_PATH%/*}

SCRIPT_DIR=$(absolute_dir "$RELATIVE_SCRIPT_DIR")

export WORKSPACE=${SCRIPT_DIR%/*}

CORTEX_CONFIG_FILE="$WORKSPACE/dev-stack/cortex-dispatcher.yml"
 
if [ ! -f "$CORTEX_CONFIG_FILE" ]
then
    cat "$CORTEX_CONFIG_FILE.tmpl" | CORTEX_DATA_ROOT="$WORKSPACE/dev-stack/tmp" envsubst > "$CORTEX_CONFIG_FILE"

    echo "Created '$CORTEX_CONFIG_FILE' for testing"
fi

export PATH=$WORKSPACE/bin:$PATH

function start-dev-stack {
    sudo docker compose -f "${WORKSPACE}/docker-compose.yml" up -d
}

function stop-dev-stack {
    sudo docker compose -f "${WORKSPACE}/docker-compose.yml" stop
}

function help {
    echo "Available commands:"
    echo ""
    echo "  help                - show this help text"
    echo "  start-dev-stack     - start the Docker containers for development"
    echo "  stop-dev-stack      - stop the Docker containers for development"
    echo ""
    echo "Run cortex-dispatcher for development testing:"
    echo ""
    echo " $ cargo run --bin cortex-dispatcher -- --config dev-stack/cortex-dispatcher.yml"
    echo ""
    echo "Run cortex-sftp-scanner for development testing:"
    echo ""
    echo " $ cargo run --bin cortex-sftp-scanner -- --config dev-stack/cortex-sftp-scanner.yml"
}

echo "Activated the Cortex workspace in '${WORKSPACE}'"
echo ""

help
